name: Build docker images

concurrency:
  group: main-${{ github.ref }}
  cancel-in-progress: true

on:
  workflow_dispatch:
  push:
    tags:
      - "*"
    branches:
      - main

jobs:
  prepare:
    runs-on: ubuntu-latest
    outputs:
      otp: ${{ steps.otp.outputs.version }}
    steps:
    - uses: actions/checkout@v2
    - name: get otp_version
      id: otp
      run: |
        otp_version=$(cat ./OTP_VERSION | jq -R -s -c 'split("\n")[:-1]')
        echo "::set-output name=version::$otp_version"

  base:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        platform:
          - [ubuntu20.04, "linux/amd64,linux/arm64"]
          - [ubuntu18.04, "linux/amd64,linux/arm64"]
          - [ubuntu16.04, "linux/amd64,linux/arm64"]
          - [debian10   , "linux/amd64,linux/arm64"]
          - [debian9    , "linux/amd64,linux/arm64"]
          - [centos8    , "linux/amd64,linux/arm64"]
          - [centos7    , "linux/amd64,linux/arm64"]
          - [centos6    , "linux/amd64"]
          - [opensuse   , "linux/amd64"]
          - [raspbian10 , "linux/arm64"]
          - [raspbian9  , "linux/arm64"]
          - [alpine3.14 , "linux/amd64,linux/arm64"]

    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: /tmp/.docker-buildx-cache
          key: docker-buildx-${{ matrix.platform[0] }}
      - uses: docker/setup-buildx-action@v1
      - uses: docker/setup-qemu-action@v1
        with:
          image: tonistiigi/binfmt:latest
          platforms: all
      - uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ github.token }}
      - uses: docker/metadata-action@v3
        id: base_meta
        with:
          images: ghcr.io/${{ github.repository }}/base
          tags: type=raw,value=${{ matrix.platform[0] }}
      - name: Build base image
        uses: docker/build-push-action@v2
        with:
          push: true
          pull: true
          cache-from: type=local,src=/tmp/.docker-buildx-cache,mode=max
          cache-to: type=local,dest=/tmp/.docker-buildx-cache-new,mode=max
          platforms: ${{ matrix.platform[1] }}
          tags: ${{ steps.base_meta.outputs.tags }}
          labels: ${{ steps.base_meta.outputs.labels }}
          file: ${{ matrix.platform[0] }}/Dockerfile
          context: .
      - name: Update cache
        run: |
          rm -rf /tmp/.docker-buildx-cache
          mv /tmp/.docker-buildx-cache-new /tmp/.docker-buildx-cache

  build:
    runs-on: ubuntu-latest
    needs:
      - prepare
      - base

    strategy:
      fail-fast: false
      matrix:
        otp: ${{ fromJSON(needs.prepare.outputs.otp) }}
        platform:
          - [ubuntu20.04, "linux/amd64,linux/arm64"]
          - [ubuntu18.04, "linux/amd64,linux/arm64"]
          - [ubuntu16.04, "linux/amd64,linux/arm64"]
          - [debian10   , "linux/amd64,linux/arm64"]
          - [debian9    , "linux/amd64,linux/arm64"]
          - [centos8    , "linux/amd64,linux/arm64"]
          - [centos7    , "linux/amd64,linux/arm64"]
          - [centos6    , "linux/amd64"]
          - [opensuse   , "linux/amd64"]
          - [raspbian10 , "linux/arm64"]
          - [raspbian9  , "linux/arm64"]
          - [alpine3.14 , "linux/amd64,linux/arm64"]

    steps:
    - uses: actions/checkout@v2
    - name: Get ref
      id: ref
      run: echo "::set-output name=ref::${GITHUB_REF##*/}"
    - uses: docker/setup-buildx-action@v1
    - uses: docker/setup-qemu-action@v1
      with:
        image: tonistiigi/binfmt:latest
        platforms: all
    - uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ github.token }}
    - uses: docker/metadata-action@v3
      id: meta
      with:
        images: ghcr.io/${{ github.repository }}/${{ steps.ref.outputs.ref }}
        tags: |
          type=raw,value=${{ matrix.otp }}-${{ matrix.platform[0] }}
    - uses: docker/build-push-action@v2
      with:
        push: true
        pull: true
        no-cache: true
        platforms: ${{ matrix.platform[1] }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        build-args: |
          BUILD_FROM=ghcr.io/${{ github.repository }}/base:${{ matrix.platform[0] }}
          OTP_VERSION=${{ matrix.otp }}
        file: ./Dockerfile
        context: .

  release:
    runs-on: ubuntu-latest
    needs: build

    if: startsWith(github.ref, 'refs/tags/')

    steps:
    - uses: actions/checkout@v2
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ github.token }}
      with:
        tag_name: ${{ github.ref }}
        release_name: EMQ X Builder Helper ${{ github.ref }} Released
        body_path: RELEASE.md
        draft: false
        prerelease: false
